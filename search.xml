<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>//post/hello-world.html</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title>AboutMe</title>
    <url>//post/%E5%85%B3%E4%BA%8E.html</url>
    <content><![CDATA[<h1 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h1><h2 id="欢迎关注我的公众号：低熵体的小站"><a href="#欢迎关注我的公众号：低熵体的小站" class="headerlink" title="欢迎关注我的公众号：低熵体的小站"></a>欢迎关注我的公众号：低熵体的小站</h2><p><img src="https://i.loli.net/2021/11/24/INg82PdhAYsbx7q.jpg" alt="qrcode_for_gh_9e149d2ba76f_258.jpg"></p>
<p>Thanks！</p>
]]></content>
      <tags>
        <tag>about</tag>
      </tags>
  </entry>
  <entry>
    <title>Unary polynomial</title>
    <url>//post/Unary-polynomial.html</url>
    <content><![CDATA[<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">PLnode</span>&#123;</span></span><br><span class="line">    <span class="comment">//数据域，coef 表示系数，expn 表示指数</span></span><br><span class="line">    <span class="keyword">float</span> coef;</span><br><span class="line">    <span class="keyword">int</span> expn;</span><br><span class="line">    <span class="comment">//指针域</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">PLnode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;PLnode,*PLinkList;</span><br><span class="line"></span><br><span class="line"><span class="comment">//一元多项式的链表表示  创建函数，输入a项的系数和指数，建立表示一元多项式的有序链表L</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">creatpolyn</span><span class="params">(PLinkList L, <span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">float</span> coef;</span><br><span class="line">    <span class="keyword">int</span> expn;</span><br><span class="line">    PLinkList tail,<span class="keyword">new</span>;</span><br><span class="line">    <span class="comment">//初始化头结点L，其中系数域记录链表的长度</span></span><br><span class="line">    L-&gt;coef = a;</span><br><span class="line">    L-&gt;expn = <span class="number">-1</span>;</span><br><span class="line">    <span class="comment">//另 tail 作为遍历链表的指针</span></span><br><span class="line">    tail = L;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*请按照指数大小升序输入*\n&quot;</span>);</span><br><span class="line">    <span class="comment">//创建 m 个新结点并对其初始化，而后链接到 L 上</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span> ; i&lt;=a ; i++)&#123;</span><br><span class="line">        <span class="keyword">new</span> = (PLinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(PLnode));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;输入第%d个系数:&quot;</span>,i);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;coef);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;输入第%d个指数:&quot;</span>,i);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;expn);</span><br><span class="line">        <span class="keyword">new</span>-&gt;coef = coef;</span><br><span class="line">        <span class="keyword">new</span>-&gt;expn = expn;</span><br><span class="line">        <span class="keyword">new</span>-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="comment">//将新结点链接到 L 上</span></span><br><span class="line">        <span class="keyword">if</span>(i == <span class="number">1</span>)&#123;</span><br><span class="line">            tail-&gt;next = <span class="keyword">new</span>;</span><br><span class="line">            tail = <span class="keyword">new</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">new</span>-&gt;expn &gt; tail-&gt;expn)&#123;</span><br><span class="line">            tail-&gt;next = <span class="keyword">new</span>;</span><br><span class="line">            tail = <span class="keyword">new</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">new</span>-&gt;expn &lt;= tail-&gt;expn)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;ERROR!!!!!\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请重新按照指数大小升序输入\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            i--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//完成多项式相加运算，即 Lc = La + Lb，将La与Lb进行比较操作，由于是在 La 上进行一元多项式的加和，最后销毁一元多项式 Lb</span></span><br><span class="line"><span class="function">PLinkList <span class="title">addpolyn</span><span class="params">(PLinkList La , PLinkList Lb)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x,len;</span><br><span class="line">    <span class="keyword">float</span> y;</span><br><span class="line">    PLinkList Lc,pa,pb,pc,u;</span><br><span class="line">    Lc = La; <span class="comment">//让Lc和La相等 便于后续操作</span></span><br><span class="line">    len = <span class="number">0</span>;</span><br><span class="line">    pc = Lc;</span><br><span class="line">    <span class="comment">//另pa，pb 指向La 、Lb 的头结点</span></span><br><span class="line">    pa = La-&gt;next;</span><br><span class="line">    pb = Lb-&gt;next;</span><br><span class="line">    <span class="comment">//通过 pa，pb 遍历链表 La、Lb，只有两指针同时存在时，才需要讨论</span></span><br><span class="line">    <span class="keyword">while</span>(pa &amp;&amp; pb)&#123;</span><br><span class="line">        x = pa-&gt;expn - pb-&gt;expn;</span><br><span class="line">        <span class="comment">//判断pa 所指结点的指数与pb 所指结点指数的大小关系</span></span><br><span class="line">        <span class="keyword">if</span>(x&lt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//如果小，则将pa结点连到Lc 上</span></span><br><span class="line">            pc = pa;</span><br><span class="line">            len++;</span><br><span class="line">            pa = pa-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="comment">//如果相等，则判断两结点的系数和是否为0</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(x == <span class="number">0</span>)&#123;</span><br><span class="line">            y = pa-&gt;coef + pb-&gt;coef;</span><br><span class="line">            <span class="keyword">if</span>(y!=<span class="number">0.0</span>)&#123;</span><br><span class="line">                <span class="comment">//如果不为 0，加和，同时连到 LC 上</span></span><br><span class="line">                pa-&gt;coef = y;</span><br><span class="line">                pc = pa;</span><br><span class="line">                len++;</span><br><span class="line">            &#125;</span><br><span class="line">                <span class="comment">//如果 和 值为0，则从 pc 的链表中删除该结点，并释放该结点</span></span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                pc-&gt;next=pa-&gt;next;</span><br><span class="line">                <span class="built_in">free</span>(pa);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//无论系数和是否为0，都执行下列操作</span></span><br><span class="line">            pa = pc-&gt;next;</span><br><span class="line">            u = pb;</span><br><span class="line">            pb = pb -&gt;next;</span><br><span class="line">            <span class="built_in">free</span>(u);</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="comment">//如果pb 所指结点指数值小，则摘取pb所指结点到 LC链表上</span></span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            u = pb-&gt;next;</span><br><span class="line">            pb-&gt;next= pa;</span><br><span class="line">            pc-&gt;next=pb;</span><br><span class="line">            pc = pb;</span><br><span class="line">            len++;</span><br><span class="line">            pb = u;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//由于是在 La 上进行一元多项式的加和，所以如果运行过程 pa 不再有结点，而pb 上有，则需要将pb剩余结点链接到 Lc 上</span></span><br><span class="line">    <span class="keyword">if</span>(pb)&#123;</span><br><span class="line">        pc-&gt;next = pb;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//计算 Lc 的长度</span></span><br><span class="line">    <span class="keyword">while</span>(pc)&#123;</span><br><span class="line">        pc = pc-&gt;next;</span><br><span class="line">        <span class="keyword">if</span>(pc)&#123;</span><br><span class="line">            len++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//Lc 的头结点中记录Lc 链表的长度</span></span><br><span class="line">    Lc-&gt;coef = len;</span><br><span class="line">    <span class="comment">//加和完成的同时，释放Lb 结点</span></span><br><span class="line">    <span class="built_in">free</span>(Lb);</span><br><span class="line">    <span class="keyword">return</span> Lc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据链表存储信息输出结点 q</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printpoly</span><span class="params">(PLinkList q)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(q-&gt;expn == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>,q-&gt;coef);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(q-&gt;expn == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>,q-&gt;coef);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;x&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.2fx^%d&quot;</span>,q-&gt;coef,q-&gt;expn);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出一元多项式L</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printpolyn</span><span class="params">(PLinkList L)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    PLinkList p;</span><br><span class="line">    p = L-&gt;next;</span><br><span class="line">    n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p)&#123;</span><br><span class="line">        n++;</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">1</span>)&#123;<span class="comment">//第一个不带&#x27;+&#x27;号</span></span><br><span class="line">            printpoly(p);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(p-&gt;coef  &gt;<span class="number">0</span>)&#123;<span class="comment">//剩下的其余系数大于0的项带&#x27;+&#x27;号</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;+&quot;</span>);</span><br><span class="line">            printpoly(p);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;<span class="comment">//剩下的其余系数小于0的本身就带&#x27;-&#x27;号</span></span><br><span class="line">            printpoly(p);</span><br><span class="line">        &#125;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    PLinkList La,Lb,Lc;</span><br><span class="line">    <span class="keyword">int</span> m,n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*****一元多项式加法程序*****\n&quot;</span>);</span><br><span class="line">    <span class="comment">//根据 n 的值，创建链表La</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输入多项式A的项数:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    La = (PLinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(PLnode));</span><br><span class="line">    creatpolyn(La,n);</span><br><span class="line">    <span class="comment">//根据 m 的值，创建 Lb</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输入多项式B的项数:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;m);</span><br><span class="line">    Lb = (PLinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(PLnode));</span><br><span class="line">    creatpolyn(Lb,m);</span><br><span class="line">    <span class="comment">//输出La和Lb</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nA=&quot;</span>);</span><br><span class="line">    printpolyn(La);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nB=&quot;</span>);</span><br><span class="line">    printpolyn(Lb);</span><br><span class="line">    <span class="comment">//计算La+Lb，结果保存在 Lc中</span></span><br><span class="line">    Lc = addpolyn(La,Lb);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nA+B=&quot;</span>);</span><br><span class="line">    printpolyn(Lc);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
</search>
