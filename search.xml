<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux服务器 SSH端口修改、禁用root账户远程登录</title>
      <link href="//post/LinuxSSH.html"/>
      <url>//post/LinuxSSH.html</url>
      
        <content type="html"><![CDATA[<h2 id="SSH端口修改"><a href="#SSH端口修改" class="headerlink" title="SSH端口修改"></a>SSH端口修改</h2><p>为什么要修改ssh端口呢？因为总有一些人然闲着没事儿就去试有哪些 <del>傻子</del> 开着默认ssh端口 然后暴力破解你的密码。。。。不改的话不安全，<del>虽然改了也不安全。。。</del></p><h3 id="1-使用root账户登录服务器"><a href="#1-使用root账户登录服务器" class="headerlink" title="1.使用root账户登录服务器"></a>1.使用root账户登录服务器</h3><p><img src="https://cdn.jsdelivr.net/gh/Falling42/MyPictures@master/BlogImg/LinuxSSH.2021.12.31/root%E7%99%BB%E5%BD%95.png" alt="root登录"></p><h3 id="2-用vim打开-etc-ssh-sshd-config配置文件"><a href="#2-用vim打开-etc-ssh-sshd-config配置文件" class="headerlink" title="2..用vim打开/etc/ssh/sshd_config配置文件"></a>2..用vim打开<code>/etc/ssh/sshd_config</code>配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>按<code>i</code>进入编辑，找到<code>#Port 22</code>把注释去掉变成<code>Port 22</code>在加上一行<code>Port 25535</code></p><p><img src="https://cdn.jsdelivr.net/gh/Falling42/MyPictures@master/BlogImg/LinuxSSH.2021.12.31/%E4%BF%AE%E6%94%B9%E7%AB%AF%E5%8F%A3.png" alt="[修改端口](https://github.com/Falling42/MyPictures/blob/master/BlogImg/LinuxSSH.2021.12.31/修改端口.png)"></p><p>然后按<code>ESC</code>再输入<code>:wq</code>进行保存</p><h3 id="3-重启ssh服务"><a href="#3-重启ssh服务" class="headerlink" title="3.重启ssh服务"></a>3.重启ssh服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd.service</span><br></pre></td></tr></table></figure><h3 id="4-向防火墙中添加修改的端口"><a href="#4-向防火墙中添加修改的端口" class="headerlink" title="4.向防火墙中添加修改的端口"></a>4.向防火墙中添加修改的端口</h3><p>向防火墙中添加端口<code>25535</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=25535/tcp --permanent</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Falling42/MyPictures@master/BlogImg/LinuxSSH.2021.12.31/%E9%98%B2%E7%81%AB%E5%A2%99%E6%B7%BB%E5%8A%A0%E7%AB%AF%E5%8F%A3.png" alt="防火墙添加端口"></p><p><code>reaload</code> 防火墙规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Falling42/MyPictures@master/BlogImg/LinuxSSH.2021.12.31/reload%E9%98%B2%E7%81%AB%E5%A2%99%E8%A7%84%E5%88%99.png" alt="reload防火墙规则"></p><p>查看端口是否添加成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --query-port=25535/tcp</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Falling42/MyPictures@master/BlogImg/LinuxSSH.2021.12.31/%E6%9F%A5%E7%9C%8B%E9%98%B2%E7%81%AB%E5%A2%99%E6%98%AF%E5%90%A6%E6%B7%BB%E5%8A%A0%E6%88%90%E5%8A%9F.png" alt="查看端口是否添加成功"></p><p><em><strong>如果开启了SELinux还需要下面这些步骤（若无则跳过）</strong></em></p><p><em>在写这篇文章的时候出现了问题</em></p><p><strong>本着试一试的心态 把SELinux开启了 然后出现了问题 我登录不上去了 通过阿里云的救援连接把SELinux关掉才重新进去的 还没解决这个问题</strong> 在结尾有详细说明</p><p><strong>还是不要开了这个选项吧 默认都是关的</strong></p><p>先查看SELinux是否开启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/sbin/sestatus -v</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Falling42/MyPictures@master/BlogImg/LinuxSSH.2021.12.31/%E6%9F%A5%E7%9C%8BSELinux%E6%98%AF%E5%90%A6%E5%BC%80%E5%90%AF.png" alt="查看SELinux是否开启"></p><p>显示<code>disabled</code>为关闭，<code>enable</code>为开启</p><p>打开配置文件<code>/etc/selinux/config</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/selinux/config</span><br></pre></td></tr></table></figure><p>如果想关闭SELinux，将<code>SELINUX=enforcing</code>改为<code>SELINUX=disabled</code></p><p><img src="https://cdn.jsdelivr.net/gh/Falling42/MyPictures@master/BlogImg/LinuxSSH.2021.12.31/SELINUX=disabled.png" alt="SELINUX=disabled"></p><p><strong>重启机器</strong>即可</p><h3 id="5-测试新的端口能否连接并禁用默认端口"><a href="#5-测试新的端口能否连接并禁用默认端口" class="headerlink" title="5.测试新的端口能否连接并禁用默认端口"></a>5.测试新的端口能否连接并禁用默认端口</h3><p>按<code>i</code>进入编辑，找到<code>Port 22</code>注释掉变成<code>#Port 22</code>然后按<code>ESC</code>再输入<code>:wq</code>进行保存</p><p><img src="https://cdn.jsdelivr.net/gh/Falling42/MyPictures@master/BlogImg/LinuxSSH.2021.12.31/%E7%A6%81%E7%94%A8%E9%BB%98%E8%AE%A4%E7%AB%AF%E5%8F%A3.png" alt="禁用默认端口"></p><p>这样我们的ssh端口就修改完成了</p><h2 id="禁用root账户远程登录"><a href="#禁用root账户远程登录" class="headerlink" title="禁用root账户远程登录"></a>禁用root账户远程登录</h2><p>改了默认ssh端口之后我们还要禁用root远程登录 这样保险一些（</p><h3 id="1-添加用户"><a href="#1-添加用户" class="headerlink" title="1.添加用户"></a>1.添加用户</h3><p>添加用户<code>lin</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adduser lin</span><br></pre></td></tr></table></figure><p>设置密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd lin</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Falling42/MyPictures@master/BlogImg/LinuxSSH.2021.12.31/%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7.png" alt="添加用户"></p><h3 id="2-修改-etc-sudoers-文件"><a href="#2-修改-etc-sudoers-文件" class="headerlink" title="2.修改 /etc/sudoers 文件"></a>2.修改 <code>/etc/sudoers </code>文件</h3><p>默认情况下<code>/etc/sudoers</code>是所有用户只读，我们要修改一下权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod u+w /etc/sudoers</span><br></pre></td></tr></table></figure><p>用vim编辑<code>/etc/sudoers</code>文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sudoers</span><br></pre></td></tr></table></figure><p>找到下面这些</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## Allow root to run any commands anywhere </span><br><span class="line">root    ALL=(ALL)       ALL</span><br></pre></td></tr></table></figure><p>按<code>i</code>进入编辑，在下面加上<code>lin    ALL=(ALL)       ALL</code>然后按<code>ESC</code>再输入<code>:wq</code>进行保存</p><p><img src="https://cdn.jsdelivr.net/gh/Falling42/MyPictures@master/BlogImg/LinuxSSH.2021.12.31/%E7%BC%96%E8%BE%91etcsudoers.png" alt="编辑etcsudoers"></p><p>改回权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod u-w /etc/sudoers</span><br></pre></td></tr></table></figure><h3 id="3-禁用root远程登录"><a href="#3-禁用root远程登录" class="headerlink" title="3.禁用root远程登录"></a>3.禁用root远程登录</h3><p>编辑<code>/etc/ssh/sshd_config</code>文件，按<code>i</code>进入编辑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>找到<code>PermitRootLogin yes</code>改为<code>PermitRootLogin no</code>，然后按<code>ESC</code>再输入<code>:wq</code>进行保存</p><p>重启ssh服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd.service</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Falling42/MyPictures@master/BlogImg/LinuxSSH.2021.12.31/%E7%A6%81%E7%94%A8root%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95success.png" alt="禁用root远程登录success"></p><p>这样就登录不上去了</p><h3 id="4-用su-root登录root账户"><a href="#4-用su-root登录root账户" class="headerlink" title="4.用su root登录root账户"></a>4.用<code>su root</code>登录root账户</h3><p>上述操作只是禁止了root用户远程登陆，并没有禁止别的用户，我们可以先用别的用户登陆，再用<code>su root</code>命令切回root用户</p><p><img src="https://cdn.jsdelivr.net/gh/Falling42/MyPictures@master/BlogImg/LinuxSSH.2021.12.31/%E5%88%87%E5%9B%9Eroot%E7%94%A8%E6%88%B7.png" alt="切回root用户"></p><p>这样禁用root远程登录就完成了</p><h2 id="一些问题"><a href="#一些问题" class="headerlink" title="一些问题"></a>一些问题</h2><h3 id="以下是在SELinux开启的情况下的一系列操作"><a href="#以下是在SELinux开启的情况下的一系列操作" class="headerlink" title="以下是在SELinux开启的情况下的一系列操作"></a><strong>以下是在SELinux开启的情况下的一系列操作</strong></h3><p>使用<code>semanage port -l | grep ssh</code>命令查看当前SElinux 允许的ssh端口</p><p>如果提示<code>-bash: semanage: command not found</code></p><p>则需要用<code>yum provides semanage</code>命令查找semanage是由哪个包来支持的</p><p><img src="https://cdn.jsdelivr.net/gh/Falling42/MyPictures@master/BlogImg/LinuxSSH.2021.12.31/%E6%9F%A5%E6%89%BEsemanage.png" alt="查找semanage"></p><p>如图提示：<code>policycoreutils-python-2.5-34.el7.x86_64 : SELinux policy core python utilities</code></p><p>这个<code>policycoreutils-python-2.5-34.el7</code>就是我们所需包的包名</p><p>接下来就用<code>yum install policycoreutils-python-2.5-34.el7</code>命令去下载对应的包</p><p><img src="https://cdn.jsdelivr.net/gh/Falling42/MyPictures@master/BlogImg/LinuxSSH.2021.12.31/%E4%B8%8B%E8%BD%BD%E5%AF%B9%E5%BA%94%E7%9A%84%E5%8C%85.png" alt="下载对应的包"></p><p>然后经过一系列操作就<code>Complete!</code>了</p><p><img src="https://cdn.jsdelivr.net/gh/Falling42/MyPictures@master/BlogImg/LinuxSSH.2021.12.31/Complete!.png" alt="Complete!"></p><p>接下来继续刚才查看当前SElinux 允许的ssh端口的操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">semanage port -l | grep ssh</span><br></pre></td></tr></table></figure><p>![继续查看当前SElinux 允许的ssh端口](<a href="https://cdn.jsdelivr.net/gh/Falling42/MyPictures@master/BlogImg/LinuxSSH.2021.12.31/%E7%BB%A7%E7%BB%AD%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8DSElinux">https://cdn.jsdelivr.net/gh/Falling42/MyPictures@master/BlogImg/LinuxSSH.2021.12.31/继续查看当前SElinux</a> 允许的ssh端口.png)</p><p>说明除了<code>22</code>端口没有其他端口，我们要把<code>25535</code>端口加进去</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">semanage port -a -t ssh_port_t -p tcp 25535</span><br></pre></td></tr></table></figure><p>然后再用<code>semanage port -l | grep ssh</code>命令查询</p><p>![再用semanage 命令查询](<a href="https://cdn.jsdelivr.net/gh/Falling42/MyPictures@master/BlogImg/LinuxSSH.2021.12.31/%E5%86%8D%E7%94%A8semanage">https://cdn.jsdelivr.net/gh/Falling42/MyPictures@master/BlogImg/LinuxSSH.2021.12.31/再用semanage</a> 命令查询.png)</p><p>这样就把我们想要的<code>25535</code>这个端口加进去了</p><p>接下来重启ssh服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd.service</span><br></pre></td></tr></table></figure><h3 id="如果不是特别了解千万不要开"><a href="#如果不是特别了解千万不要开" class="headerlink" title="如果不是特别了解千万不要开"></a><em><strong>如果不是特别了解千万不要开</strong></em></h3><p><strong>这也是我按照其他博客写的操作下去的 当时我并没有把SELinux开启</strong></p><p>直到我把默认的ssh端口关了的时候才把这个打开的。重启服务器后我就登不上去了 </p><p><img src="https://cdn.jsdelivr.net/gh/Falling42/MyPictures@master/BlogImg/LinuxSSH.2021.12.31/%E9%98%BF%E9%87%8C%E4%BA%91%E6%95%91%E6%8F%B4.png" alt="阿里云救援"></p><p>靠着这个活下来的（</p><p>我也没有验证过之后的步骤是否可行 但是当我通过阿里云救援把SELinux关掉再去执行<code>semanage port -l | grep ssh</code>命令的时候 报错了</p><p><img src="https://cdn.jsdelivr.net/gh/Falling42/MyPictures@master/BlogImg/LinuxSSH.2021.12.31/%E6%8A%A5%E9%94%99.png" alt="报错"></p><p>我也去搜了搜 大部分都是让把SELinux关掉的 少数的一些讲的我没看懂（</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单的一元多项式加法实现</title>
      <link href="//post/Unary-polynomial.html"/>
      <url>//post/Unary-polynomial.html</url>
      
        <content type="html"><![CDATA[<p>设计一个简单的一元稀疏多项式加法运算器。</p><p>（1）按照指数升序次序，输入并建立多项式A和B。</p><p>（2）计算多项式A与B的和，即建立多项式A+B。</p><p>（3）按照指数升序次序，输出多项式A、B、A+B。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">PLnode</span>&#123;</span></span><br><span class="line">    <span class="comment">//数据域，coef 表示系数，expn 表示指数</span></span><br><span class="line">    <span class="keyword">float</span> coef;</span><br><span class="line">    <span class="keyword">int</span> expn;</span><br><span class="line">    <span class="comment">//指针域</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">PLnode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;PLnode,*PLinkList;</span><br><span class="line"></span><br><span class="line"><span class="comment">//一元多项式的链表表示  创建函数，输入a项的系数和指数，建立表示一元多项式的有序链表L</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">creatpolyn</span><span class="params">(PLinkList L, <span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">float</span> coef;</span><br><span class="line">    <span class="keyword">int</span> expn;</span><br><span class="line">    PLinkList tail,<span class="keyword">new</span>;</span><br><span class="line">    <span class="comment">//初始化头结点L，其中系数域记录链表的长度</span></span><br><span class="line">    L-&gt;coef = a;</span><br><span class="line">    L-&gt;expn = <span class="number">-1</span>;</span><br><span class="line">    <span class="comment">//另 tail 作为遍历链表的指针</span></span><br><span class="line">    tail = L;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*请按照指数大小升序输入*\n&quot;</span>);</span><br><span class="line">    <span class="comment">//创建 m 个新结点并对其初始化，而后链接到 L 上</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span> ; i&lt;=a ; i++)&#123;</span><br><span class="line">        <span class="keyword">new</span> = (PLinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(PLnode));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;输入第%d个系数:&quot;</span>,i);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;coef);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;输入第%d个指数:&quot;</span>,i);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;expn);</span><br><span class="line">        <span class="keyword">new</span>-&gt;coef = coef;</span><br><span class="line">        <span class="keyword">new</span>-&gt;expn = expn;</span><br><span class="line">        <span class="keyword">new</span>-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="comment">//将新结点链接到 L 上</span></span><br><span class="line">        <span class="keyword">if</span>(i == <span class="number">1</span>)&#123;</span><br><span class="line">            tail-&gt;next = <span class="keyword">new</span>;</span><br><span class="line">            tail = <span class="keyword">new</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">new</span>-&gt;expn &gt; tail-&gt;expn)&#123;</span><br><span class="line">            tail-&gt;next = <span class="keyword">new</span>;</span><br><span class="line">            tail = <span class="keyword">new</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">new</span>-&gt;expn &lt;= tail-&gt;expn)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;ERROR!!!!!\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请重新按照指数大小升序输入\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            i--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//完成多项式相加运算，即 Lc = La + Lb，将La与Lb进行比较操作，由于是在 La 上进行一元多项式的加和，最后销毁一元多项式 Lb</span></span><br><span class="line"><span class="function">PLinkList <span class="title">addpolyn</span><span class="params">(PLinkList La , PLinkList Lb)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x,len;</span><br><span class="line">    <span class="keyword">float</span> y;</span><br><span class="line">    PLinkList Lc,pa,pb,pc,u;</span><br><span class="line">    Lc = La; <span class="comment">//让Lc和La相等 便于后续操作</span></span><br><span class="line">    len = <span class="number">0</span>;</span><br><span class="line">    pc = Lc;</span><br><span class="line">    <span class="comment">//另pa，pb 指向La 、Lb 的头结点</span></span><br><span class="line">    pa = La-&gt;next;</span><br><span class="line">    pb = Lb-&gt;next;</span><br><span class="line">    <span class="comment">//通过 pa，pb 遍历链表 La、Lb，只有两指针同时存在时，才需要讨论</span></span><br><span class="line">    <span class="keyword">while</span>(pa &amp;&amp; pb)&#123;</span><br><span class="line">        x = pa-&gt;expn - pb-&gt;expn;</span><br><span class="line">        <span class="comment">//判断pa 所指结点的指数与pb 所指结点指数的大小关系</span></span><br><span class="line">        <span class="keyword">if</span>(x&lt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//如果小，则将pa结点连到Lc 上</span></span><br><span class="line">            pc = pa;</span><br><span class="line">            len++;</span><br><span class="line">            pa = pa-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="comment">//如果相等，则判断两结点的系数和是否为0</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(x == <span class="number">0</span>)&#123;</span><br><span class="line">            y = pa-&gt;coef + pb-&gt;coef;</span><br><span class="line">            <span class="keyword">if</span>(y!=<span class="number">0.0</span>)&#123;</span><br><span class="line">                <span class="comment">//如果不为 0，加和，同时连到 LC 上</span></span><br><span class="line">                pa-&gt;coef = y;</span><br><span class="line">                pc = pa;</span><br><span class="line">                len++;</span><br><span class="line">            &#125;</span><br><span class="line">                <span class="comment">//如果 和 值为0，则从 pc 的链表中删除该结点，并释放该结点</span></span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                pc-&gt;next=pa-&gt;next;</span><br><span class="line">                <span class="built_in">free</span>(pa);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//无论系数和是否为0，都执行下列操作</span></span><br><span class="line">            pa = pc-&gt;next;</span><br><span class="line">            u = pb;</span><br><span class="line">            pb = pb -&gt;next;</span><br><span class="line">            <span class="built_in">free</span>(u);</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="comment">//如果pb 所指结点指数值小，则摘取pb所指结点到 LC链表上</span></span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            u = pb-&gt;next;</span><br><span class="line">            pb-&gt;next= pa;</span><br><span class="line">            pc-&gt;next=pb;</span><br><span class="line">            pc = pb;</span><br><span class="line">            len++;</span><br><span class="line">            pb = u;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//由于是在 La 上进行一元多项式的加和，所以如果运行过程 pa 不再有结点，而pb 上有，则需要将pb剩余结点链接到 Lc 上</span></span><br><span class="line">    <span class="keyword">if</span>(pb)&#123;</span><br><span class="line">        pc-&gt;next = pb;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//计算 Lc 的长度</span></span><br><span class="line">    <span class="keyword">while</span>(pc)&#123;</span><br><span class="line">        pc = pc-&gt;next;</span><br><span class="line">        <span class="keyword">if</span>(pc)&#123;</span><br><span class="line">            len++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//Lc 的头结点中记录Lc 链表的长度</span></span><br><span class="line">    Lc-&gt;coef = len;</span><br><span class="line">    <span class="comment">//加和完成的同时，释放Lb 结点</span></span><br><span class="line">    <span class="built_in">free</span>(Lb);</span><br><span class="line">    <span class="keyword">return</span> Lc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据链表存储信息输出结点 q</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printpoly</span><span class="params">(PLinkList q)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(q-&gt;expn == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>,q-&gt;coef);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(q-&gt;expn == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>,q-&gt;coef);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;x&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.2fx^%d&quot;</span>,q-&gt;coef,q-&gt;expn);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出一元多项式L</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printpolyn</span><span class="params">(PLinkList L)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    PLinkList p;</span><br><span class="line">    p = L-&gt;next;</span><br><span class="line">    n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p)&#123;</span><br><span class="line">        n++;</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">1</span>)&#123;<span class="comment">//第一个不带&#x27;+&#x27;号</span></span><br><span class="line">            printpoly(p);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(p-&gt;coef  &gt;<span class="number">0</span>)&#123;<span class="comment">//剩下的其余系数大于0的项带&#x27;+&#x27;号</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;+&quot;</span>);</span><br><span class="line">            printpoly(p);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;<span class="comment">//剩下的其余系数小于0的本身就带&#x27;-&#x27;号</span></span><br><span class="line">            printpoly(p);</span><br><span class="line">        &#125;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    PLinkList La,Lb,Lc;</span><br><span class="line">    <span class="keyword">int</span> m,n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*****一元多项式加法程序*****\n&quot;</span>);</span><br><span class="line">    <span class="comment">//根据 n 的值，创建链表La</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输入多项式A的项数:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    La = (PLinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(PLnode));</span><br><span class="line">    creatpolyn(La,n);</span><br><span class="line">    <span class="comment">//根据 m 的值，创建 Lb</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输入多项式B的项数:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;m);</span><br><span class="line">    Lb = (PLinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(PLnode));</span><br><span class="line">    creatpolyn(Lb,m);</span><br><span class="line">    <span class="comment">//输出La和Lb</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nA=&quot;</span>);</span><br><span class="line">    printpolyn(La);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nB=&quot;</span>);</span><br><span class="line">    printpolyn(Lb);</span><br><span class="line">    <span class="comment">//计算La+Lb，结果保存在 Lc中</span></span><br><span class="line">    Lc = addpolyn(La,Lb);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nA+B=&quot;</span>);</span><br><span class="line">    printpolyn(Lc);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AboutMe</title>
      <link href="//post/About.html"/>
      <url>//post/About.html</url>
      
        <content type="html"><![CDATA[<h1 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h1><h2 id="欢迎关注我的公众号：低熵体的小站"><a href="#欢迎关注我的公众号：低熵体的小站" class="headerlink" title="欢迎关注我的公众号：低熵体的小站"></a>欢迎关注我的公众号：低熵体的小站</h2><p><img src="https://cdn.jsdelivr.net/gh/Falling42/MyPictures@master/qrcode.jpg" alt="qrcode"></p><p>Thanks！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 关于 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
